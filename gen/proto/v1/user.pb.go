// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: proto/v1/user.proto

package pbv1

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	github_com_gogo_protobuf_types "github.com/gogo/protobuf/types"
	golang_proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/type/datetime"
	io "io"
	math "math"
	math_bits "math/bits"
	reflect "reflect"
	strconv "strconv"
	strings "strings"
	time "time"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = golang_proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf
var _ = time.Kitchen

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type UserGroup int32

const (
	UserGroupGuest    UserGroup = 0
	UserGroupCustomer UserGroup = 1
)

var UserGroup_name = map[int32]string{
	0: "USER_GROUP_GUEST",
	1: "USER_GROUP_CUSTOMER",
}

var UserGroup_value = map[string]int32{
	"USER_GROUP_GUEST":    0,
	"USER_GROUP_CUSTOMER": 1,
}

func (UserGroup) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_1b1212c297c1885f, []int{0}
}

type UserStatus int32

const (
	UserStatusUnverified  UserStatus = 0
	UserStatusUnconfirmed UserStatus = 1
	UserStatusActive      UserStatus = 2
	UserStatusBlocked     UserStatus = 3
)

var UserStatus_name = map[int32]string{
	0: "USER_STATUS_UNVERIFIED",
	1: "USER_STATUS_UNCONFIRMED",
	2: "USER_STATUS_ACTIVE",
	3: "USER_STATUS_BLOCKED",
}

var UserStatus_value = map[string]int32{
	"USER_STATUS_UNVERIFIED":  0,
	"USER_STATUS_UNCONFIRMED": 1,
	"USER_STATUS_ACTIVE":      2,
	"USER_STATUS_BLOCKED":     3,
}

func (UserStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_1b1212c297c1885f, []int{1}
}

type User struct {
	Uuid      string     `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Group     UserGroup  `protobuf:"varint,2,opt,name=group,proto3,enum=pb.v1.UserGroup" json:"group,omitempty"`
	Status    UserStatus `protobuf:"varint,3,opt,name=status,proto3,enum=pb.v1.UserStatus" json:"status,omitempty"`
	Email     string     `protobuf:"bytes,4,opt,name=email,proto3" json:"email,omitempty"`
	Lastname  string     `protobuf:"bytes,5,opt,name=lastname,proto3" json:"lastname,omitempty"`
	Firstname string     `protobuf:"bytes,6,opt,name=firstname,proto3" json:"firstname,omitempty"`
	CreatedAt *time.Time `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3,stdtime" json:"created_at,omitempty"`
}

func (m *User) Reset()      { *m = User{} }
func (*User) ProtoMessage() {}
func (*User) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b1212c297c1885f, []int{0}
}
func (m *User) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_User.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_User.Merge(m, src)
}
func (m *User) XXX_Size() int {
	return m.Size()
}
func (m *User) XXX_DiscardUnknown() {
	xxx_messageInfo_User.DiscardUnknown(m)
}

var xxx_messageInfo_User proto.InternalMessageInfo

func (m *User) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *User) GetGroup() UserGroup {
	if m != nil {
		return m.Group
	}
	return UserGroupGuest
}

func (m *User) GetStatus() UserStatus {
	if m != nil {
		return m.Status
	}
	return UserStatusUnverified
}

func (m *User) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *User) GetLastname() string {
	if m != nil {
		return m.Lastname
	}
	return ""
}

func (m *User) GetFirstname() string {
	if m != nil {
		return m.Firstname
	}
	return ""
}

func (m *User) GetCreatedAt() *time.Time {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func init() {
	proto.RegisterEnum("pb.v1.UserGroup", UserGroup_name, UserGroup_value)
	golang_proto.RegisterEnum("pb.v1.UserGroup", UserGroup_name, UserGroup_value)
	proto.RegisterEnum("pb.v1.UserStatus", UserStatus_name, UserStatus_value)
	golang_proto.RegisterEnum("pb.v1.UserStatus", UserStatus_name, UserStatus_value)
	proto.RegisterType((*User)(nil), "pb.v1.User")
	golang_proto.RegisterType((*User)(nil), "pb.v1.User")
}

func init() { proto.RegisterFile("proto/v1/user.proto", fileDescriptor_1b1212c297c1885f) }
func init() { golang_proto.RegisterFile("proto/v1/user.proto", fileDescriptor_1b1212c297c1885f) }

var fileDescriptor_1b1212c297c1885f = []byte{
	// 549 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x92, 0xbd, 0x6f, 0xd3, 0x40,
	0x18, 0xc6, 0x7d, 0x6d, 0x52, 0xc8, 0x21, 0x55, 0xee, 0x35, 0x05, 0x63, 0xa1, 0xc3, 0x62, 0x40,
	0xa1, 0xa2, 0xb6, 0x5a, 0x10, 0x03, 0x5b, 0x3e, 0xdc, 0x28, 0x82, 0x36, 0xc8, 0x1f, 0x1d, 0x58,
	0x22, 0xc7, 0xbe, 0x9a, 0x13, 0x71, 0xce, 0x3a, 0x9f, 0x23, 0x75, 0x63, 0xce, 0xd4, 0x91, 0x25,
	0x3b, 0x7f, 0x06, 0x23, 0x63, 0xc6, 0x6c, 0x10, 0x67, 0x61, 0xec, 0x08, 0x1b, 0x8a, 0x1d, 0x25,
	0x61, 0xbb, 0xf7, 0xfd, 0xfd, 0x1e, 0xbd, 0x7a, 0x2c, 0xc3, 0xc3, 0x98, 0x33, 0xc1, 0x8c, 0xd1,
	0xa9, 0x91, 0x26, 0x84, 0xeb, 0xf9, 0x84, 0xca, 0x71, 0x5f, 0x1f, 0x9d, 0xaa, 0xd5, 0x90, 0x85,
	0xac, 0xe0, 0xcb, 0x57, 0x01, 0x55, 0x35, 0x64, 0x2c, 0x1c, 0x10, 0x43, 0xdc, 0xc4, 0xc4, 0x08,
	0x3c, 0x41, 0x04, 0x8d, 0x48, 0xc1, 0x9e, 0xfd, 0x05, 0xb0, 0xe4, 0x26, 0x84, 0x23, 0x04, 0x4b,
	0x69, 0x4a, 0x03, 0x05, 0x68, 0xa0, 0x56, 0xb1, 0xf2, 0x37, 0x7a, 0x0e, 0xcb, 0x21, 0x67, 0x69,
	0xac, 0xec, 0x68, 0xa0, 0xb6, 0x7f, 0x26, 0xeb, 0xf9, 0x15, 0x7d, 0xe9, 0xb7, 0x97, 0x7b, 0xab,
	0xc0, 0xe8, 0x05, 0xdc, 0x4b, 0x84, 0x27, 0xd2, 0x44, 0xd9, 0xcd, 0xc5, 0x83, 0x2d, 0xd1, 0xce,
	0x81, 0xb5, 0x12, 0x50, 0x15, 0x96, 0x49, 0xe4, 0xd1, 0x81, 0x52, 0xca, 0xef, 0x14, 0x03, 0x52,
	0xe1, 0xfd, 0x81, 0x97, 0x88, 0xa1, 0x17, 0x11, 0xa5, 0x9c, 0x83, 0xf5, 0x8c, 0x9e, 0xc0, 0xca,
	0x35, 0xe5, 0x2b, 0xb8, 0x97, 0xc3, 0xcd, 0x02, 0xbd, 0x85, 0xd0, 0xe7, 0xc4, 0x13, 0x24, 0xe8,
	0x79, 0x42, 0xb9, 0xa7, 0x81, 0xda, 0x83, 0xb3, 0x23, 0xbd, 0x28, 0xac, 0x2f, 0x0b, 0xeb, 0x2d,
	0x4f, 0x10, 0x87, 0x46, 0xa4, 0x51, 0xba, 0xfd, 0xf9, 0x14, 0x58, 0x95, 0x95, 0x5e, 0x17, 0xc7,
	0x04, 0x56, 0xd6, 0x55, 0x50, 0x0d, 0xca, 0xae, 0x6d, 0x5a, 0xbd, 0xb6, 0xd5, 0x75, 0x3f, 0xf4,
	0xda, 0xae, 0x69, 0x3b, 0xb2, 0xa4, 0xa2, 0xf1, 0x44, 0xdb, 0x5f, 0x4b, 0xed, 0x94, 0x24, 0x02,
	0xe9, 0xf0, 0x70, 0xcb, 0x6c, 0xba, 0xb6, 0xd3, 0xbd, 0x30, 0x2d, 0x19, 0xa8, 0x47, 0xe3, 0x89,
	0x76, 0xb0, 0x96, 0x9b, 0x69, 0x22, 0x58, 0x44, 0xf8, 0xf1, 0x0c, 0x40, 0xb8, 0xf9, 0x12, 0xe8,
	0x35, 0x7c, 0x98, 0xc7, 0x6d, 0xa7, 0xee, 0xb8, 0x76, 0xcf, 0xbd, 0xbc, 0x32, 0xad, 0xce, 0x79,
	0xc7, 0x6c, 0xc9, 0x92, 0xaa, 0x8c, 0x27, 0x5a, 0x75, 0xe3, 0xba, 0xc3, 0x11, 0xe1, 0xf4, 0x9a,
	0x92, 0x00, 0xbd, 0x81, 0x8f, 0xfe, 0x4f, 0x35, 0xbb, 0x97, 0xe7, 0x1d, 0xeb, 0xc2, 0x6c, 0xc9,
	0x40, 0x7d, 0x3c, 0x9e, 0x68, 0x47, 0xdb, 0x31, 0x9f, 0x0d, 0xaf, 0x29, 0x8f, 0x48, 0x80, 0x5e,
	0x42, 0xb4, 0x9d, 0xab, 0x37, 0x9d, 0xce, 0x95, 0x29, 0xef, 0xa8, 0xd5, 0xf1, 0x44, 0x93, 0x37,
	0x91, 0xba, 0x2f, 0xe8, 0x88, 0xac, 0xab, 0xad, 0xec, 0xc6, 0xfb, 0x6e, 0xf3, 0x9d, 0xd9, 0x92,
	0x77, 0x37, 0xd5, 0x0a, 0xbd, 0x31, 0x60, 0xfe, 0x67, 0x12, 0x34, 0xd8, 0x74, 0x8e, 0xa5, 0xd9,
	0x1c, 0x4b, 0x77, 0x73, 0x0c, 0xbe, 0x64, 0x18, 0x7c, 0xcb, 0x30, 0xf8, 0x91, 0x61, 0x30, 0xcd,
	0x30, 0xf8, 0x95, 0x61, 0xf0, 0x3b, 0xc3, 0xd2, 0x5d, 0x86, 0xc1, 0x9f, 0x0c, 0x83, 0xdb, 0x05,
	0x96, 0xbe, 0x2e, 0x30, 0xf8, 0xbe, 0xc0, 0x60, 0xba, 0xc0, 0xd2, 0x6c, 0x81, 0xa5, 0x8f, 0x27,
	0x21, 0x15, 0x9f, 0xd2, 0xbe, 0xee, 0xb3, 0xc8, 0xe8, 0xdf, 0x30, 0x2e, 0x6e, 0x0c, 0x32, 0x14,
	0x84, 0xc7, 0x9c, 0x26, 0xe4, 0xc4, 0x8b, 0xe3, 0x01, 0xf5, 0x3d, 0x41, 0xd9, 0xd0, 0x88, 0xfb,
	0xa3, 0xd3, 0xfe, 0x5e, 0xfe, 0xd7, 0xbe, 0xfa, 0x17, 0x00, 0x00, 0xff, 0xff, 0x6e, 0x07, 0xd9,
	0xb3, 0x05, 0x03, 0x00, 0x00,
}

func (x UserGroup) String() string {
	s, ok := UserGroup_name[int32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}
func (x UserStatus) String() string {
	s, ok := UserStatus_name[int32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}
func (this *User) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*User)
	if !ok {
		that2, ok := that.(User)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Uuid != that1.Uuid {
		return false
	}
	if this.Group != that1.Group {
		return false
	}
	if this.Status != that1.Status {
		return false
	}
	if this.Email != that1.Email {
		return false
	}
	if this.Lastname != that1.Lastname {
		return false
	}
	if this.Firstname != that1.Firstname {
		return false
	}
	if that1.CreatedAt == nil {
		if this.CreatedAt != nil {
			return false
		}
	} else if !this.CreatedAt.Equal(*that1.CreatedAt) {
		return false
	}
	return true
}
func (this *User) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 11)
	s = append(s, "&pbv1.User{")
	s = append(s, "Uuid: "+fmt.Sprintf("%#v", this.Uuid)+",\n")
	s = append(s, "Group: "+fmt.Sprintf("%#v", this.Group)+",\n")
	s = append(s, "Status: "+fmt.Sprintf("%#v", this.Status)+",\n")
	s = append(s, "Email: "+fmt.Sprintf("%#v", this.Email)+",\n")
	s = append(s, "Lastname: "+fmt.Sprintf("%#v", this.Lastname)+",\n")
	s = append(s, "Firstname: "+fmt.Sprintf("%#v", this.Firstname)+",\n")
	s = append(s, "CreatedAt: "+fmt.Sprintf("%#v", this.CreatedAt)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func valueToGoStringUser(v interface{}, typ string) string {
	rv := reflect.ValueOf(v)
	if rv.IsNil() {
		return "nil"
	}
	pv := reflect.Indirect(rv).Interface()
	return fmt.Sprintf("func(v %v) *%v { return &v } ( %#v )", typ, typ, pv)
}
func (m *User) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *User) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *User) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.CreatedAt != nil {
		n1, err1 := github_com_gogo_protobuf_types.StdTimeMarshalTo(*m.CreatedAt, dAtA[i-github_com_gogo_protobuf_types.SizeOfStdTime(*m.CreatedAt):])
		if err1 != nil {
			return 0, err1
		}
		i -= n1
		i = encodeVarintUser(dAtA, i, uint64(n1))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.Firstname) > 0 {
		i -= len(m.Firstname)
		copy(dAtA[i:], m.Firstname)
		i = encodeVarintUser(dAtA, i, uint64(len(m.Firstname)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.Lastname) > 0 {
		i -= len(m.Lastname)
		copy(dAtA[i:], m.Lastname)
		i = encodeVarintUser(dAtA, i, uint64(len(m.Lastname)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Email) > 0 {
		i -= len(m.Email)
		copy(dAtA[i:], m.Email)
		i = encodeVarintUser(dAtA, i, uint64(len(m.Email)))
		i--
		dAtA[i] = 0x22
	}
	if m.Status != 0 {
		i = encodeVarintUser(dAtA, i, uint64(m.Status))
		i--
		dAtA[i] = 0x18
	}
	if m.Group != 0 {
		i = encodeVarintUser(dAtA, i, uint64(m.Group))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Uuid) > 0 {
		i -= len(m.Uuid)
		copy(dAtA[i:], m.Uuid)
		i = encodeVarintUser(dAtA, i, uint64(len(m.Uuid)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintUser(dAtA []byte, offset int, v uint64) int {
	offset -= sovUser(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *User) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Uuid)
	if l > 0 {
		n += 1 + l + sovUser(uint64(l))
	}
	if m.Group != 0 {
		n += 1 + sovUser(uint64(m.Group))
	}
	if m.Status != 0 {
		n += 1 + sovUser(uint64(m.Status))
	}
	l = len(m.Email)
	if l > 0 {
		n += 1 + l + sovUser(uint64(l))
	}
	l = len(m.Lastname)
	if l > 0 {
		n += 1 + l + sovUser(uint64(l))
	}
	l = len(m.Firstname)
	if l > 0 {
		n += 1 + l + sovUser(uint64(l))
	}
	if m.CreatedAt != nil {
		l = github_com_gogo_protobuf_types.SizeOfStdTime(*m.CreatedAt)
		n += 1 + l + sovUser(uint64(l))
	}
	return n
}

func sovUser(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozUser(x uint64) (n int) {
	return sovUser(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (this *User) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&User{`,
		`Uuid:` + fmt.Sprintf("%v", this.Uuid) + `,`,
		`Group:` + fmt.Sprintf("%v", this.Group) + `,`,
		`Status:` + fmt.Sprintf("%v", this.Status) + `,`,
		`Email:` + fmt.Sprintf("%v", this.Email) + `,`,
		`Lastname:` + fmt.Sprintf("%v", this.Lastname) + `,`,
		`Firstname:` + fmt.Sprintf("%v", this.Firstname) + `,`,
		`CreatedAt:` + strings.Replace(fmt.Sprintf("%v", this.CreatedAt), "DateTime", "datetime.DateTime", 1) + `,`,
		`}`,
	}, "")
	return s
}
func valueToStringUser(v interface{}) string {
	rv := reflect.ValueOf(v)
	if rv.IsNil() {
		return "nil"
	}
	pv := reflect.Indirect(rv).Interface()
	return fmt.Sprintf("*%v", pv)
}
func (m *User) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowUser
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: User: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: User: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Uuid", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowUser
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthUser
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthUser
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Uuid = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Group", wireType)
			}
			m.Group = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowUser
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Group |= UserGroup(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			m.Status = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowUser
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Status |= UserStatus(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Email", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowUser
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthUser
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthUser
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Email = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Lastname", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowUser
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthUser
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthUser
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Lastname = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Firstname", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowUser
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthUser
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthUser
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Firstname = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreatedAt", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowUser
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthUser
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthUser
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.CreatedAt == nil {
				m.CreatedAt = new(time.Time)
			}
			if err := github_com_gogo_protobuf_types.StdTimeUnmarshal(m.CreatedAt, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipUser(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthUser
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipUser(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowUser
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowUser
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowUser
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthUser
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupUser
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthUser
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthUser        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowUser          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupUser = fmt.Errorf("proto: unexpected end of group")
)
