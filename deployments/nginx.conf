map $microservice $upstream {
    users         user_server:8080;
    orders        order_server:8080;
    products      product_server:8080;
    swagger       swagger_ui:8080;
}

server {
    listen 80;
    server_name enterprise.application.local;
    server_tokens   off;
    client_max_body_size 16m;
    root /dev/null;
    # this is the internal Docker DNS, cache only for 30s
    resolver 127.0.0.11 valid=30s;

    location / {
        set $microservice "swagger";
        proxy_pass http://$upstream;
    }

    location ~ ^/v1/(?<microservice>[\w\-]+) {
        proxy_http_version 1.1;
        proxy_set_header    Host                $http_host;
        proxy_set_header    X-Real-IP           $remote_addr;
        proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;
        proxy_set_header    X-Forwarded-Proto   http;
        proxy_set_header    X-Frame-Options     SAMEORIGIN;

        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET,POST,PUT,DELETE,OPTIONS,PATCH';
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Access-Control-Allow-Headers,Access-Control-Allow-Origin,Authorization';
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }

        add_header 'X-Microservice' '$microservice';
        add_header 'X-Proxy-Pass' '$upstream';
        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Methods' 'GET,POST,PUT,DELETE,OPTIONS,PATCH';
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Access-Control-Allow-Headers,Access-Control-Allow-Origin,Authorization';
        proxy_pass http://$upstream;
    }
}